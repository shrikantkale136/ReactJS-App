[{"E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\index.js":"1","E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\reportWebVitals.js":"2","E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\App.js":"3","E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\components\\Topbar.jsx":"4","E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\components\\Navigation.jsx":"5","E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\components\\TableView.jsx":"6"},{"size":547,"mtime":1609269341228,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":316,"mtime":1609828341236,"results":"10","hashOfConfig":"8"},{"size":4336,"mtime":1609762560855,"results":"11","hashOfConfig":"8"},{"size":9117,"mtime":1609835862082,"results":"12","hashOfConfig":"8"},{"size":6258,"mtime":1609835851590,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vs0ir7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\index.js",[],["28","29"],"E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\reportWebVitals.js",[],"E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\App.js",[],"E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\components\\Topbar.jsx",["30","31","32"],"import React, { Component } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nexport default class Topbar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n  handleModal() {\r\n    this.setState({ show: !this.state.show });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"text-center\">\r\n          <div className=\"top_bar\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col d-flex flex-row\">\r\n                  <div className=\"top_bar_contact_item\">\r\n                    <div className=\"top_bar_icon\">\r\n                      <img\r\n                        src=\"https://res.cloudinary.com/dxfq3iotg/image/upload/v1560918577/phone.png\"\r\n                        alt=\"\"\r\n                      ></img>\r\n                    </div>\r\n                    +92 123 456 789\r\n                  </div>\r\n                  <div className=\"top_bar_contact_item\">\r\n                    <div className=\"top_bar_icon\">\r\n                      <img\r\n                        src=\"https://res.cloudinary.com/dxfq3iotg/image/upload/v1560918597/mail.png\"\r\n                        alt=\"\"\r\n                      ></img>\r\n                    </div>\r\n                    <a href=\"#\">support@lululemon.com</a>\r\n                  </div>\r\n                  <div className=\"top_bar_content ml-auto\">\r\n                    <div className=\"top_bar_user\">\r\n                      \r\n                      <div >\r\n                        <Form className=\"mr-4\">\r\n                          <Form.Group  controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Control type=\"email\" placeholder=\"search\" />\r\n                          </Form.Group>\r\n                        </Form>\r\n                        \r\n                      </div>\r\n                      <div className=\"user_icon\">\r\n                        <img\r\n                          src=\"https://res.cloudinary.com/dxfq3iotg/image/upload/v1560918647/user.svg\"\r\n                          alt=\"\"\r\n                        ></img>\r\n                      </div>\r\n                      <div>\r\n                        <a href=\"#\" onClick={() => {\r\n                            this.handleModal();\r\n                          }}>Sign in</a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={() => this.handleModal()}\r\n          size=\"xs\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n        >\r\n          {/* <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">Login</Modal.Title>\r\n          </Modal.Header> */}\r\n          <Modal.Body>\r\n            <div class=\"login-form\">\r\n              <div class=\"main-div\">\r\n                <div class=\"panel\">\r\n                  <h2>Admin Login</h2>\r\n                  <p>Please enter your email and password</p>\r\n                </div>\r\n                <form id=\"Login\">\r\n                  <div class=\"form-group\">\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      id=\"inputEmail\"\r\n                      placeholder=\"Email Address\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div class=\"form-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      class=\"form-control\"\r\n                      id=\"inputPassword\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"forgot\">\r\n                    <a href=\"#\">Forgot password?</a>\r\n                  </div>\r\n                  <Button variant=\"primary\">\r\n                    Login\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          {/* <Modal.Footer>\r\n            <Button\r\n              onClick={() => {\r\n                this.handleModal();\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer> */}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\components\\Navigation.jsx",["33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50"],"E:\\ReactWorkspace\\ReactJS-App\\e-commerce\\src\\components\\TableView.jsx",["51","52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":38,"column":21,"nodeType":"60","endLine":38,"endColumn":33},{"ruleId":"58","severity":1,"message":"59","line":58,"column":25,"nodeType":"60","endLine":60,"endColumn":30},{"ruleId":"58","severity":1,"message":"59","line":104,"column":21,"nodeType":"60","endLine":104,"endColumn":33},{"ruleId":"58","severity":1,"message":"59","line":18,"column":25,"nodeType":"60","endLine":18,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":24,"column":25,"nodeType":"60","endLine":24,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":30,"column":29,"nodeType":"60","endLine":30,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":35,"column":33,"nodeType":"60","endLine":35,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":40,"column":33,"nodeType":"60","endLine":40,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":45,"column":33,"nodeType":"60","endLine":45,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":52,"column":29,"nodeType":"60","endLine":52,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":57,"column":29,"nodeType":"60","endLine":57,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":62,"column":29,"nodeType":"60","endLine":62,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":70,"column":25,"nodeType":"60","endLine":70,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":76,"column":29,"nodeType":"60","endLine":76,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":81,"column":33,"nodeType":"60","endLine":81,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":86,"column":33,"nodeType":"60","endLine":86,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":91,"column":33,"nodeType":"60","endLine":91,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":98,"column":29,"nodeType":"60","endLine":98,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":103,"column":29,"nodeType":"60","endLine":103,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":108,"column":29,"nodeType":"60","endLine":108,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":116,"column":25,"nodeType":"60","endLine":116,"endColumn":37},{"ruleId":"61","severity":1,"message":"62","line":123,"column":6,"nodeType":"63","endLine":123,"endColumn":8,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"59","line":137,"column":19,"nodeType":"60","endLine":137,"endColumn":31},{"ruleId":"58","severity":1,"message":"59","line":167,"column":21,"nodeType":"60","endLine":167,"endColumn":33},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'response'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [response]",{"range":"70","text":"71"},[3862,3864],"[response]"]